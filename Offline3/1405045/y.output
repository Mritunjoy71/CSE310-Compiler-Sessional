Terminals unused in grammar

   COMMENT
   DO
   BREAK
   CONTINUE
   CHAR
   DOUBLE
   SWITCH
   CASE
   DEFAULT
   STRING


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_declaration
    6     | func_definition

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN parameter_list RPAREN error

    9 func_definition: type_specifier ID LPAREN parameter_list RPAREN compound_statement

   10 parameter_list: parameter_list COMMA type_specifier ID
   11               | parameter_list COMMA type_specifier
   12               | type_specifier ID
   13               | type_specifier
   14               | %empty

   15 $@1: %empty

   16 $@2: %empty

   17 $@3: %empty

   18 compound_statement: LCURL $@1 statements $@2 RCURL $@3
   19                   | LCURL RCURL

   20 var_declaration: type_specifier declaration_list SEMICOLON
   21                | type_specifier declaration_list error

   22 type_specifier: INT
   23               | FLOAT
   24               | VOID

   25 declaration_list: declaration_list COMMA ID
   26                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   27                 | ID
   28                 | ID LTHIRD CONST_INT RTHIRD

   29 statements: statement
   30           | statements statement

   31 statement: var_declaration
   32          | expression_statement
   33          | compound_statement
   34          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   35          | IF LPAREN expression RPAREN statement
   36          | IF LPAREN expression RPAREN statement ELSE statement
   37          | WHILE LPAREN expression RPAREN statement
   38          | PRINTLN LPAREN ID RPAREN SEMICOLON
   39          | PRINTLN LPAREN ID RPAREN error
   40          | RETURN expression SEMICOLON
   41          | RETURN expression error

   42 expression_statement: SEMICOLON
   43                     | expression SEMICOLON
   44                     | expression error

   45 variable: ID
   46         | ID LTHIRD expression RTHIRD

   47 expression: logic_expression
   48           | variable ASSIGNOP logic_expression

   49 logic_expression: rel_expression
   50                 | rel_expression LOGICOP rel_expression

   51 rel_expression: simple_expression
   52               | simple_expression RELOP simple_expression

   53 simple_expression: term
   54                  | simple_expression ADDOP term

   55 term: unary_expression
   56     | term MULOP unary_expression

   57 unary_expression: ADDOP unary_expression
   58                 | NOT unary_expression
   59                 | factor

   60 factor: variable
   61       | ID LPAREN argument_list RPAREN
   62       | LPAREN expression RPAREN
   63       | CONST_INT
   64       | CONST_FLOAT
   65       | CONST_CHAR
   66       | variable INCOP
   67       | variable DECOP

   68 argument_list: arguments
   69              | %empty

   70 arguments: arguments COMMA logic_expression
   71          | logic_expression


Terminals, with rules where they appear

$end (0) 0
error (256) 8 21 39 41 44
COMMENT (258)
IF (259) 35 36
ELSE (260) 36
FOR (261) 34
WHILE (262) 37
DO (263)
BREAK (264)
CONTINUE (265)
INT (266) 22
FLOAT (267) 23
CHAR (268)
DOUBLE (269)
VOID (270) 24
RETURN (271) 40 41
SWITCH (272)
CASE (273)
DEFAULT (274)
INCOP (275) 66
DECOP (276) 67
ASSIGNOP (277) 48
LPAREN (278) 7 8 9 34 35 36 37 38 39 61 62
RPAREN (279) 7 8 9 34 35 36 37 38 39 61 62
LCURL (280) 18 19
RCURL (281) 18 19
LTHIRD (282) 26 28 46
RTHIRD (283) 26 28 46
SEMICOLON (284) 7 20 38 40 42 43
COMMA (285) 10 11 25 26 70
STRING (286)
NOT (287) 58
PRINTLN (288) 38 39
ID (289) 7 8 9 10 12 25 26 27 28 38 39 45 46 61
CONST_INT (290) 26 28 63
CONST_FLOAT (291) 64
CONST_CHAR (292) 65
ADDOP (293) 54 57
MULOP (294) 56
LOGICOP (295) 50
RELOP (296) 52
second_precedence (297)


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
start (44)
    on left: 1, on right: 0
program (45)
    on left: 2 3, on right: 1 2
unit (46)
    on left: 4 5 6, on right: 2 3
func_declaration (47)
    on left: 7 8, on right: 5
func_definition (48)
    on left: 9, on right: 6
parameter_list (49)
    on left: 10 11 12 13 14, on right: 7 8 9 10 11
compound_statement (50)
    on left: 18 19, on right: 9 33
$@1 (51)
    on left: 15, on right: 18
$@2 (52)
    on left: 16, on right: 18
$@3 (53)
    on left: 17, on right: 18
var_declaration (54)
    on left: 20 21, on right: 4 31
type_specifier (55)
    on left: 22 23 24, on right: 7 8 9 10 11 12 13 20 21
declaration_list (56)
    on left: 25 26 27 28, on right: 20 21 25 26
statements (57)
    on left: 29 30, on right: 18 30
statement (58)
    on left: 31 32 33 34 35 36 37 38 39 40 41, on right: 29 30 34 35
    36 37
expression_statement (59)
    on left: 42 43 44, on right: 32 34
variable (60)
    on left: 45 46, on right: 48 60 66 67
expression (61)
    on left: 47 48, on right: 34 35 36 37 40 41 43 44 46 62
logic_expression (62)
    on left: 49 50, on right: 47 48 70 71
rel_expression (63)
    on left: 51 52, on right: 49 50
simple_expression (64)
    on left: 53 54, on right: 51 52 54
term (65)
    on left: 55 56, on right: 53 54 56
unary_expression (66)
    on left: 57 58 59, on right: 55 56 57 58
factor (67)
    on left: 60 61 62 63 64 65 66 67, on right: 59
argument_list (68)
    on left: 68 69, on right: 61
arguments (69)
    on left: 70 71, on right: 68 70


State 0

    0 $accept: . start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 1

   22 type_specifier: INT .

    $default  reduce using rule 22 (type_specifier)


State 2

   23 type_specifier: FLOAT .

    $default  reduce using rule 23 (type_specifier)


State 3

   24 type_specifier: VOID .

    $default  reduce using rule 24 (type_specifier)


State 4

    0 $accept: start . $end

    $end  shift, and go to state 11


State 5

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 12
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 6

    3 program: unit .

    $default  reduce using rule 3 (program)


State 7

    5 unit: func_declaration .

    $default  reduce using rule 5 (unit)


State 8

    6 unit: func_definition .

    $default  reduce using rule 6 (unit)


State 9

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


State 10

    7 func_declaration: type_specifier . ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier . ID LPAREN parameter_list RPAREN error
    9 func_definition: type_specifier . ID LPAREN parameter_list RPAREN compound_statement
   20 var_declaration: type_specifier . declaration_list SEMICOLON
   21                | type_specifier . declaration_list error

    ID  shift, and go to state 13

    declaration_list  go to state 14


State 11

    0 $accept: start $end .

    $default  accept


State 12

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 13

    7 func_declaration: type_specifier ID . LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID . LPAREN parameter_list RPAREN error
    9 func_definition: type_specifier ID . LPAREN parameter_list RPAREN compound_statement
   27 declaration_list: ID .
   28                 | ID . LTHIRD CONST_INT RTHIRD

    LPAREN  shift, and go to state 15
    LTHIRD  shift, and go to state 16

    $default  reduce using rule 27 (declaration_list)


State 14

   20 var_declaration: type_specifier declaration_list . SEMICOLON
   21                | type_specifier declaration_list . error
   25 declaration_list: declaration_list . COMMA ID
   26                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD

    error      shift, and go to state 17
    SEMICOLON  shift, and go to state 18
    COMMA      shift, and go to state 19


State 15

    7 func_declaration: type_specifier ID LPAREN . parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN . parameter_list RPAREN error
    9 func_definition: type_specifier ID LPAREN . parameter_list RPAREN compound_statement

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 14 (parameter_list)

    parameter_list  go to state 20
    type_specifier  go to state 21


State 16

   28 declaration_list: ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 22


State 17

   21 var_declaration: type_specifier declaration_list error .

    $default  reduce using rule 21 (var_declaration)


State 18

   20 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 20 (var_declaration)


State 19

   25 declaration_list: declaration_list COMMA . ID
   26                 | declaration_list COMMA . ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 23


State 20

    7 func_declaration: type_specifier ID LPAREN parameter_list . RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN parameter_list . RPAREN error
    9 func_definition: type_specifier ID LPAREN parameter_list . RPAREN compound_statement
   10 parameter_list: parameter_list . COMMA type_specifier ID
   11               | parameter_list . COMMA type_specifier

    RPAREN  shift, and go to state 24
    COMMA   shift, and go to state 25


State 21

   12 parameter_list: type_specifier . ID
   13               | type_specifier .

    ID  shift, and go to state 26

    $default  reduce using rule 13 (parameter_list)


State 22

   28 declaration_list: ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 27


State 23

   25 declaration_list: declaration_list COMMA ID .
   26                 | declaration_list COMMA ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 28

    $default  reduce using rule 25 (declaration_list)


State 24

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN . SEMICOLON
    8                 | type_specifier ID LPAREN parameter_list RPAREN . error
    9 func_definition: type_specifier ID LPAREN parameter_list RPAREN . compound_statement

    error      shift, and go to state 29
    LCURL      shift, and go to state 30
    SEMICOLON  shift, and go to state 31

    compound_statement  go to state 32


State 25

   10 parameter_list: parameter_list COMMA . type_specifier ID
   11               | parameter_list COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 33


State 26

   12 parameter_list: type_specifier ID .

    $default  reduce using rule 12 (parameter_list)


State 27

   28 declaration_list: ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 28 (declaration_list)


State 28

   26 declaration_list: declaration_list COMMA ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 34


State 29

    8 func_declaration: type_specifier ID LPAREN parameter_list RPAREN error .

    $default  reduce using rule 8 (func_declaration)


State 30

   18 compound_statement: LCURL . $@1 statements $@2 RCURL $@3
   19                   | LCURL . RCURL

    RCURL  shift, and go to state 35

    $default  reduce using rule 15 ($@1)

    $@1  go to state 36


State 31

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON .

    $default  reduce using rule 7 (func_declaration)


State 32

    9 func_definition: type_specifier ID LPAREN parameter_list RPAREN compound_statement .

    $default  reduce using rule 9 (func_definition)


State 33

   10 parameter_list: parameter_list COMMA type_specifier . ID
   11               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 37

    $default  reduce using rule 11 (parameter_list)


State 34

   26 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 38


State 35

   19 compound_statement: LCURL RCURL .

    $default  reduce using rule 19 (compound_statement)


State 36

   18 compound_statement: LCURL $@1 . statements $@2 RCURL $@3

    IF           shift, and go to state 39
    FOR          shift, and go to state 40
    WHILE        shift, and go to state 41
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 42
    LPAREN       shift, and go to state 43
    LCURL        shift, and go to state 30
    SEMICOLON    shift, and go to state 44
    NOT          shift, and go to state 45
    PRINTLN      shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49
    CONST_CHAR   shift, and go to state 50
    ADDOP        shift, and go to state 51

    compound_statement    go to state 52
    var_declaration       go to state 53
    type_specifier        go to state 54
    statements            go to state 55
    statement             go to state 56
    expression_statement  go to state 57
    variable              go to state 58
    expression            go to state 59
    logic_expression      go to state 60
    rel_expression        go to state 61
    simple_expression     go to state 62
    term                  go to state 63
    unary_expression      go to state 64
    factor                go to state 65


State 37

   10 parameter_list: parameter_list COMMA type_specifier ID .

    $default  reduce using rule 10 (parameter_list)


State 38

   26 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 26 (declaration_list)


State 39

   35 statement: IF . LPAREN expression RPAREN statement
   36          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 66


State 40

   34 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 67


State 41

   37 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 68


State 42

   40 statement: RETURN . expression SEMICOLON
   41          | RETURN . expression error

    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 45
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49
    CONST_CHAR   shift, and go to state 50
    ADDOP        shift, and go to state 51

    variable           go to state 58
    expression         go to state 69
    logic_expression   go to state 60
    rel_expression     go to state 61
    simple_expression  go to state 62
    term               go to state 63
    unary_expression   go to state 64
    factor             go to state 65


State 43

   62 factor: LPAREN . expression RPAREN

    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 45
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49
    CONST_CHAR   shift, and go to state 50
    ADDOP        shift, and go to state 51

    variable           go to state 58
    expression         go to state 70
    logic_expression   go to state 60
    rel_expression     go to state 61
    simple_expression  go to state 62
    term               go to state 63
    unary_expression   go to state 64
    factor             go to state 65


State 44

   42 expression_statement: SEMICOLON .

    $default  reduce using rule 42 (expression_statement)


State 45

   58 unary_expression: NOT . unary_expression

    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 45
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49
    CONST_CHAR   shift, and go to state 50
    ADDOP        shift, and go to state 51

    variable          go to state 71
    unary_expression  go to state 72
    factor            go to state 65


State 46

   38 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON
   39          | PRINTLN . LPAREN ID RPAREN error

    LPAREN  shift, and go to state 73


State 47

   45 variable: ID .
   46         | ID . LTHIRD expression RTHIRD
   61 factor: ID . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 74
    LTHIRD  shift, and go to state 75

    $default  reduce using rule 45 (variable)


State 48

   63 factor: CONST_INT .

    $default  reduce using rule 63 (factor)


State 49

   64 factor: CONST_FLOAT .

    $default  reduce using rule 64 (factor)


State 50

   65 factor: CONST_CHAR .

    $default  reduce using rule 65 (factor)


State 51

   57 unary_expression: ADDOP . unary_expression

    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 45
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49
    CONST_CHAR   shift, and go to state 50
    ADDOP        shift, and go to state 51

    variable          go to state 71
    unary_expression  go to state 76
    factor            go to state 65


State 52

   33 statement: compound_statement .

    $default  reduce using rule 33 (statement)


State 53

   31 statement: var_declaration .

    $default  reduce using rule 31 (statement)


State 54

   20 var_declaration: type_specifier . declaration_list SEMICOLON
   21                | type_specifier . declaration_list error

    ID  shift, and go to state 77

    declaration_list  go to state 14


State 55

   18 compound_statement: LCURL $@1 statements . $@2 RCURL $@3
   30 statements: statements . statement

    IF           shift, and go to state 39
    FOR          shift, and go to state 40
    WHILE        shift, and go to state 41
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 42
    LPAREN       shift, and go to state 43
    LCURL        shift, and go to state 30
    SEMICOLON    shift, and go to state 44
    NOT          shift, and go to state 45
    PRINTLN      shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49
    CONST_CHAR   shift, and go to state 50
    ADDOP        shift, and go to state 51

    $default  reduce using rule 16 ($@2)

    compound_statement    go to state 52
    $@2                   go to state 78
    var_declaration       go to state 53
    type_specifier        go to state 54
    statement             go to state 79
    expression_statement  go to state 57
    variable              go to state 58
    expression            go to state 59
    logic_expression      go to state 60
    rel_expression        go to state 61
    simple_expression     go to state 62
    term                  go to state 63
    unary_expression      go to state 64
    factor                go to state 65


State 56

   29 statements: statement .

    $default  reduce using rule 29 (statements)


State 57

   32 statement: expression_statement .

    $default  reduce using rule 32 (statement)


State 58

   48 expression: variable . ASSIGNOP logic_expression
   60 factor: variable .
   66       | variable . INCOP
   67       | variable . DECOP

    INCOP     shift, and go to state 80
    DECOP     shift, and go to state 81
    ASSIGNOP  shift, and go to state 82

    $default  reduce using rule 60 (factor)


State 59

   43 expression_statement: expression . SEMICOLON
   44                     | expression . error

    error      shift, and go to state 83
    SEMICOLON  shift, and go to state 84


State 60

   47 expression: logic_expression .

    $default  reduce using rule 47 (expression)


State 61

   49 logic_expression: rel_expression .
   50                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 85

    $default  reduce using rule 49 (logic_expression)


State 62

   51 rel_expression: simple_expression .
   52               | simple_expression . RELOP simple_expression
   54 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 86
    RELOP  shift, and go to state 87

    $default  reduce using rule 51 (rel_expression)


State 63

   53 simple_expression: term .
   56 term: term . MULOP unary_expression

    MULOP  shift, and go to state 88

    $default  reduce using rule 53 (simple_expression)


State 64

   55 term: unary_expression .

    $default  reduce using rule 55 (term)


State 65

   59 unary_expression: factor .

    $default  reduce using rule 59 (unary_expression)


State 66

   35 statement: IF LPAREN . expression RPAREN statement
   36          | IF LPAREN . expression RPAREN statement ELSE statement

    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 45
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49
    CONST_CHAR   shift, and go to state 50
    ADDOP        shift, and go to state 51

    variable           go to state 58
    expression         go to state 89
    logic_expression   go to state 60
    rel_expression     go to state 61
    simple_expression  go to state 62
    term               go to state 63
    unary_expression   go to state 64
    factor             go to state 65


State 67

   34 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    LPAREN       shift, and go to state 43
    SEMICOLON    shift, and go to state 44
    NOT          shift, and go to state 45
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49
    CONST_CHAR   shift, and go to state 50
    ADDOP        shift, and go to state 51

    expression_statement  go to state 90
    variable              go to state 58
    expression            go to state 59
    logic_expression      go to state 60
    rel_expression        go to state 61
    simple_expression     go to state 62
    term                  go to state 63
    unary_expression      go to state 64
    factor                go to state 65


State 68

   37 statement: WHILE LPAREN . expression RPAREN statement

    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 45
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49
    CONST_CHAR   shift, and go to state 50
    ADDOP        shift, and go to state 51

    variable           go to state 58
    expression         go to state 91
    logic_expression   go to state 60
    rel_expression     go to state 61
    simple_expression  go to state 62
    term               go to state 63
    unary_expression   go to state 64
    factor             go to state 65


State 69

   40 statement: RETURN expression . SEMICOLON
   41          | RETURN expression . error

    error      shift, and go to state 92
    SEMICOLON  shift, and go to state 93


State 70

   62 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 94


State 71

   60 factor: variable .
   66       | variable . INCOP
   67       | variable . DECOP

    INCOP  shift, and go to state 80
    DECOP  shift, and go to state 81

    $default  reduce using rule 60 (factor)


State 72

   58 unary_expression: NOT unary_expression .

    $default  reduce using rule 58 (unary_expression)


State 73

   38 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON
   39          | PRINTLN LPAREN . ID RPAREN error

    ID  shift, and go to state 95


State 74

   61 factor: ID LPAREN . argument_list RPAREN

    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 45
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49
    CONST_CHAR   shift, and go to state 50
    ADDOP        shift, and go to state 51

    $default  reduce using rule 69 (argument_list)

    variable           go to state 71
    logic_expression   go to state 96
    rel_expression     go to state 61
    simple_expression  go to state 62
    term               go to state 63
    unary_expression   go to state 64
    factor             go to state 65
    argument_list      go to state 97
    arguments          go to state 98


State 75

   46 variable: ID LTHIRD . expression RTHIRD

    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 45
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49
    CONST_CHAR   shift, and go to state 50
    ADDOP        shift, and go to state 51

    variable           go to state 58
    expression         go to state 99
    logic_expression   go to state 60
    rel_expression     go to state 61
    simple_expression  go to state 62
    term               go to state 63
    unary_expression   go to state 64
    factor             go to state 65


State 76

   57 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 57 (unary_expression)


State 77

   27 declaration_list: ID .
   28                 | ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 16

    $default  reduce using rule 27 (declaration_list)


State 78

   18 compound_statement: LCURL $@1 statements $@2 . RCURL $@3

    RCURL  shift, and go to state 100


State 79

   30 statements: statements statement .

    $default  reduce using rule 30 (statements)


State 80

   66 factor: variable INCOP .

    $default  reduce using rule 66 (factor)


State 81

   67 factor: variable DECOP .

    $default  reduce using rule 67 (factor)


State 82

   48 expression: variable ASSIGNOP . logic_expression

    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 45
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49
    CONST_CHAR   shift, and go to state 50
    ADDOP        shift, and go to state 51

    variable           go to state 71
    logic_expression   go to state 101
    rel_expression     go to state 61
    simple_expression  go to state 62
    term               go to state 63
    unary_expression   go to state 64
    factor             go to state 65


State 83

   44 expression_statement: expression error .

    $default  reduce using rule 44 (expression_statement)


State 84

   43 expression_statement: expression SEMICOLON .

    $default  reduce using rule 43 (expression_statement)


State 85

   50 logic_expression: rel_expression LOGICOP . rel_expression

    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 45
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49
    CONST_CHAR   shift, and go to state 50
    ADDOP        shift, and go to state 51

    variable           go to state 71
    rel_expression     go to state 102
    simple_expression  go to state 62
    term               go to state 63
    unary_expression   go to state 64
    factor             go to state 65


State 86

   54 simple_expression: simple_expression ADDOP . term

    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 45
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49
    CONST_CHAR   shift, and go to state 50
    ADDOP        shift, and go to state 51

    variable          go to state 71
    term              go to state 103
    unary_expression  go to state 64
    factor            go to state 65


State 87

   52 rel_expression: simple_expression RELOP . simple_expression

    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 45
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49
    CONST_CHAR   shift, and go to state 50
    ADDOP        shift, and go to state 51

    variable           go to state 71
    simple_expression  go to state 104
    term               go to state 63
    unary_expression   go to state 64
    factor             go to state 65


State 88

   56 term: term MULOP . unary_expression

    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 45
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49
    CONST_CHAR   shift, and go to state 50
    ADDOP        shift, and go to state 51

    variable          go to state 71
    unary_expression  go to state 105
    factor            go to state 65


State 89

   35 statement: IF LPAREN expression . RPAREN statement
   36          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 106


State 90

   34 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    LPAREN       shift, and go to state 43
    SEMICOLON    shift, and go to state 44
    NOT          shift, and go to state 45
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49
    CONST_CHAR   shift, and go to state 50
    ADDOP        shift, and go to state 51

    expression_statement  go to state 107
    variable              go to state 58
    expression            go to state 59
    logic_expression      go to state 60
    rel_expression        go to state 61
    simple_expression     go to state 62
    term                  go to state 63
    unary_expression      go to state 64
    factor                go to state 65


State 91

   37 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 108


State 92

   41 statement: RETURN expression error .

    $default  reduce using rule 41 (statement)


State 93

   40 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 40 (statement)


State 94

   62 factor: LPAREN expression RPAREN .

    $default  reduce using rule 62 (factor)


State 95

   38 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON
   39          | PRINTLN LPAREN ID . RPAREN error

    RPAREN  shift, and go to state 109


State 96

   71 arguments: logic_expression .

    $default  reduce using rule 71 (arguments)


State 97

   61 factor: ID LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 110


State 98

   68 argument_list: arguments .
   70 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 111

    $default  reduce using rule 68 (argument_list)


State 99

   46 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 112


State 100

   18 compound_statement: LCURL $@1 statements $@2 RCURL . $@3

    $default  reduce using rule 17 ($@3)

    $@3  go to state 113


State 101

   48 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 48 (expression)


State 102

   50 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 50 (logic_expression)


State 103

   54 simple_expression: simple_expression ADDOP term .
   56 term: term . MULOP unary_expression

    MULOP  shift, and go to state 88

    $default  reduce using rule 54 (simple_expression)


State 104

   52 rel_expression: simple_expression RELOP simple_expression .
   54 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 86

    $default  reduce using rule 52 (rel_expression)


State 105

   56 term: term MULOP unary_expression .

    $default  reduce using rule 56 (term)


State 106

   35 statement: IF LPAREN expression RPAREN . statement
   36          | IF LPAREN expression RPAREN . statement ELSE statement

    IF           shift, and go to state 39
    FOR          shift, and go to state 40
    WHILE        shift, and go to state 41
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 42
    LPAREN       shift, and go to state 43
    LCURL        shift, and go to state 30
    SEMICOLON    shift, and go to state 44
    NOT          shift, and go to state 45
    PRINTLN      shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49
    CONST_CHAR   shift, and go to state 50
    ADDOP        shift, and go to state 51

    compound_statement    go to state 52
    var_declaration       go to state 53
    type_specifier        go to state 54
    statement             go to state 114
    expression_statement  go to state 57
    variable              go to state 58
    expression            go to state 59
    logic_expression      go to state 60
    rel_expression        go to state 61
    simple_expression     go to state 62
    term                  go to state 63
    unary_expression      go to state 64
    factor                go to state 65


State 107

   34 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 45
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49
    CONST_CHAR   shift, and go to state 50
    ADDOP        shift, and go to state 51

    variable           go to state 58
    expression         go to state 115
    logic_expression   go to state 60
    rel_expression     go to state 61
    simple_expression  go to state 62
    term               go to state 63
    unary_expression   go to state 64
    factor             go to state 65


State 108

   37 statement: WHILE LPAREN expression RPAREN . statement

    IF           shift, and go to state 39
    FOR          shift, and go to state 40
    WHILE        shift, and go to state 41
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 42
    LPAREN       shift, and go to state 43
    LCURL        shift, and go to state 30
    SEMICOLON    shift, and go to state 44
    NOT          shift, and go to state 45
    PRINTLN      shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49
    CONST_CHAR   shift, and go to state 50
    ADDOP        shift, and go to state 51

    compound_statement    go to state 52
    var_declaration       go to state 53
    type_specifier        go to state 54
    statement             go to state 116
    expression_statement  go to state 57
    variable              go to state 58
    expression            go to state 59
    logic_expression      go to state 60
    rel_expression        go to state 61
    simple_expression     go to state 62
    term                  go to state 63
    unary_expression      go to state 64
    factor                go to state 65


State 109

   38 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON
   39          | PRINTLN LPAREN ID RPAREN . error

    error      shift, and go to state 117
    SEMICOLON  shift, and go to state 118


State 110

   61 factor: ID LPAREN argument_list RPAREN .

    $default  reduce using rule 61 (factor)


State 111

   70 arguments: arguments COMMA . logic_expression

    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 45
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49
    CONST_CHAR   shift, and go to state 50
    ADDOP        shift, and go to state 51

    variable           go to state 71
    logic_expression   go to state 119
    rel_expression     go to state 61
    simple_expression  go to state 62
    term               go to state 63
    unary_expression   go to state 64
    factor             go to state 65


State 112

   46 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 46 (variable)


State 113

   18 compound_statement: LCURL $@1 statements $@2 RCURL $@3 .

    $default  reduce using rule 18 (compound_statement)


State 114

   35 statement: IF LPAREN expression RPAREN statement .
   36          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 120

    $default  reduce using rule 35 (statement)


State 115

   34 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 121


State 116

   37 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 37 (statement)


State 117

   39 statement: PRINTLN LPAREN ID RPAREN error .

    $default  reduce using rule 39 (statement)


State 118

   38 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 38 (statement)


State 119

   70 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 70 (arguments)


State 120

   36 statement: IF LPAREN expression RPAREN statement ELSE . statement

    IF           shift, and go to state 39
    FOR          shift, and go to state 40
    WHILE        shift, and go to state 41
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 42
    LPAREN       shift, and go to state 43
    LCURL        shift, and go to state 30
    SEMICOLON    shift, and go to state 44
    NOT          shift, and go to state 45
    PRINTLN      shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49
    CONST_CHAR   shift, and go to state 50
    ADDOP        shift, and go to state 51

    compound_statement    go to state 52
    var_declaration       go to state 53
    type_specifier        go to state 54
    statement             go to state 122
    expression_statement  go to state 57
    variable              go to state 58
    expression            go to state 59
    logic_expression      go to state 60
    rel_expression        go to state 61
    simple_expression     go to state 62
    term                  go to state 63
    unary_expression      go to state 64
    factor                go to state 65


State 121

   34 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    IF           shift, and go to state 39
    FOR          shift, and go to state 40
    WHILE        shift, and go to state 41
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 42
    LPAREN       shift, and go to state 43
    LCURL        shift, and go to state 30
    SEMICOLON    shift, and go to state 44
    NOT          shift, and go to state 45
    PRINTLN      shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49
    CONST_CHAR   shift, and go to state 50
    ADDOP        shift, and go to state 51

    compound_statement    go to state 52
    var_declaration       go to state 53
    type_specifier        go to state 54
    statement             go to state 123
    expression_statement  go to state 57
    variable              go to state 58
    expression            go to state 59
    logic_expression      go to state 60
    rel_expression        go to state 61
    simple_expression     go to state 62
    term                  go to state 63
    unary_expression      go to state 64
    factor                go to state 65


State 122

   36 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 36 (statement)


State 123

   34 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 34 (statement)
