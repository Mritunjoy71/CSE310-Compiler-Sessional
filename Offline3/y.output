Terminals unused in grammar

   COMMENT
   DO
   BREAK
   CONTINUE
   CHAR
   DOUBLE
   SWITCH
   CASE
   DEFAULT
   STRING


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_declaration
    6     | func_definition

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON

    8 func_definition: type_specifier ID LPAREN parameter_list RPAREN compound_statement

    9 parameter_list: parameter_list COMMA type_specifier ID
   10               | parameter_list COMMA type_specifier
   11               | type_specifier ID
   12               | type_specifier
   13               | %empty

   14 $@1: %empty

   15 compound_statement: LCURL $@1 statements RCURL
   16                   | LCURL RCURL

   17 var_declaration: type_specifier declaration_list SEMICOLON

   18 type_specifier: INT
   19               | FLOAT
   20               | VOID

   21 declaration_list: declaration_list COMMA ID
   22                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   23                 | ID
   24                 | ID LTHIRD CONST_INT RTHIRD

   25 statements: statement
   26           | statements statement

   27 statement: var_declaration
   28          | expression_statement
   29          | compound_statement
   30          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   31          | IF LPAREN expression RPAREN statement
   32          | IF LPAREN expression RPAREN statement ELSE statement
   33          | WHILE LPAREN expression RPAREN statement
   34          | PRINTLN LPAREN ID RPAREN SEMICOLON
   35          | RETURN expression SEMICOLON

   36 expression_statement: SEMICOLON
   37                     | expression SEMICOLON

   38 variable: ID
   39         | ID LTHIRD expression RTHIRD

   40 expression: logic_expression
   41           | variable ASSIGNOP logic_expression

   42 logic_expression: rel_expression
   43                 | rel_expression LOGICOP rel_expression

   44 rel_expression: simple_expression
   45               | simple_expression RELOP simple_expression

   46 simple_expression: term
   47                  | simple_expression ADDOP term

   48 term: unary_expression
   49     | term MULOP unary_expression

   50 unary_expression: ADDOP unary_expression
   51                 | NOT unary_expression
   52                 | factor

   53 factor: variable
   54       | ID LPAREN argument_list RPAREN
   55       | LPAREN expression RPAREN
   56       | CONST_INT
   57       | CONST_FLOAT
   58       | CONST_CHAR
   59       | variable INCOP
   60       | variable DECOP

   61 argument_list: arguments
   62              | %empty

   63 arguments: arguments COMMA logic_expression
   64          | logic_expression


Terminals, with rules where they appear

$end (0) 0
error (256)
COMMENT (258)
IF (259) 31 32
ELSE (260) 32
FOR (261) 30
WHILE (262) 33
DO (263)
BREAK (264)
CONTINUE (265)
INT (266) 18
FLOAT (267) 19
CHAR (268)
DOUBLE (269)
VOID (270) 20
RETURN (271) 35
SWITCH (272)
CASE (273)
DEFAULT (274)
INCOP (275) 59
DECOP (276) 60
ADDOP (277) 47 50
MULOP (278) 49
RELOP (279) 45
ASSIGNOP (280) 41
LOGICOP (281) 43
LPAREN (282) 7 8 30 31 32 33 34 54 55
RPAREN (283) 7 8 30 31 32 33 34 54 55
LCURL (284) 15 16
RCURL (285) 15 16
LTHIRD (286) 22 24 39
RTHIRD (287) 22 24 39
SEMICOLON (288) 7 17 34 35 36 37
COMMA (289) 9 10 21 22 63
STRING (290)
NOT (291) 51
PRINTLN (292) 34
ID (293) 7 8 9 11 21 22 23 24 34 38 39 54
CONST_INT (294) 22 24 56
CONST_FLOAT (295) 57
CONST_CHAR (296) 58
second_precedence (297)


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
start (44)
    on left: 1, on right: 0
program (45)
    on left: 2 3, on right: 1 2
unit (46)
    on left: 4 5 6, on right: 2 3
func_declaration (47)
    on left: 7, on right: 5
func_definition (48)
    on left: 8, on right: 6
parameter_list (49)
    on left: 9 10 11 12 13, on right: 7 8 9 10
compound_statement (50)
    on left: 15 16, on right: 8 29
$@1 (51)
    on left: 14, on right: 15
var_declaration (52)
    on left: 17, on right: 4 27
type_specifier (53)
    on left: 18 19 20, on right: 7 8 9 10 11 12 17
declaration_list (54)
    on left: 21 22 23 24, on right: 17 21 22
statements (55)
    on left: 25 26, on right: 15 26
statement (56)
    on left: 27 28 29 30 31 32 33 34 35, on right: 25 26 30 31 32 33
expression_statement (57)
    on left: 36 37, on right: 28 30
variable (58)
    on left: 38 39, on right: 41 53 59 60
expression (59)
    on left: 40 41, on right: 30 31 32 33 35 37 39 55
logic_expression (60)
    on left: 42 43, on right: 40 41 63 64
rel_expression (61)
    on left: 44 45, on right: 42 43
simple_expression (62)
    on left: 46 47, on right: 44 45 47
term (63)
    on left: 48 49, on right: 46 47 49
unary_expression (64)
    on left: 50 51 52, on right: 48 49 50 51
factor (65)
    on left: 53 54 55 56 57 58 59 60, on right: 52
argument_list (66)
    on left: 61 62, on right: 54
arguments (67)
    on left: 63 64, on right: 61 63


State 0

    0 $accept: . start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 1

   18 type_specifier: INT .

    $default  reduce using rule 18 (type_specifier)


State 2

   19 type_specifier: FLOAT .

    $default  reduce using rule 19 (type_specifier)


State 3

   20 type_specifier: VOID .

    $default  reduce using rule 20 (type_specifier)


State 4

    0 $accept: start . $end

    $end  shift, and go to state 11


State 5

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 12
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 6

    3 program: unit .

    $default  reduce using rule 3 (program)


State 7

    5 unit: func_declaration .

    $default  reduce using rule 5 (unit)


State 8

    6 unit: func_definition .

    $default  reduce using rule 6 (unit)


State 9

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


State 10

    7 func_declaration: type_specifier . ID LPAREN parameter_list RPAREN SEMICOLON
    8 func_definition: type_specifier . ID LPAREN parameter_list RPAREN compound_statement
   17 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 13

    declaration_list  go to state 14


State 11

    0 $accept: start $end .

    $default  accept


State 12

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 13

    7 func_declaration: type_specifier ID . LPAREN parameter_list RPAREN SEMICOLON
    8 func_definition: type_specifier ID . LPAREN parameter_list RPAREN compound_statement
   23 declaration_list: ID .
   24                 | ID . LTHIRD CONST_INT RTHIRD

    LPAREN  shift, and go to state 15
    LTHIRD  shift, and go to state 16

    $default  reduce using rule 23 (declaration_list)


State 14

   17 var_declaration: type_specifier declaration_list . SEMICOLON
   21 declaration_list: declaration_list . COMMA ID
   22                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD

    SEMICOLON  shift, and go to state 17
    COMMA      shift, and go to state 18


State 15

    7 func_declaration: type_specifier ID LPAREN . parameter_list RPAREN SEMICOLON
    8 func_definition: type_specifier ID LPAREN . parameter_list RPAREN compound_statement

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 13 (parameter_list)

    parameter_list  go to state 19
    type_specifier  go to state 20


State 16

   24 declaration_list: ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 21


State 17

   17 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 17 (var_declaration)


State 18

   21 declaration_list: declaration_list COMMA . ID
   22                 | declaration_list COMMA . ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 22


State 19

    7 func_declaration: type_specifier ID LPAREN parameter_list . RPAREN SEMICOLON
    8 func_definition: type_specifier ID LPAREN parameter_list . RPAREN compound_statement
    9 parameter_list: parameter_list . COMMA type_specifier ID
   10               | parameter_list . COMMA type_specifier

    RPAREN  shift, and go to state 23
    COMMA   shift, and go to state 24


State 20

   11 parameter_list: type_specifier . ID
   12               | type_specifier .

    ID  shift, and go to state 25

    $default  reduce using rule 12 (parameter_list)


State 21

   24 declaration_list: ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 26


State 22

   21 declaration_list: declaration_list COMMA ID .
   22                 | declaration_list COMMA ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 27

    $default  reduce using rule 21 (declaration_list)


State 23

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN . SEMICOLON
    8 func_definition: type_specifier ID LPAREN parameter_list RPAREN . compound_statement

    LCURL      shift, and go to state 28
    SEMICOLON  shift, and go to state 29

    compound_statement  go to state 30


State 24

    9 parameter_list: parameter_list COMMA . type_specifier ID
   10               | parameter_list COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 31


State 25

   11 parameter_list: type_specifier ID .

    $default  reduce using rule 11 (parameter_list)


State 26

   24 declaration_list: ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 24 (declaration_list)


State 27

   22 declaration_list: declaration_list COMMA ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 32


State 28

   15 compound_statement: LCURL . $@1 statements RCURL
   16                   | LCURL . RCURL

    RCURL  shift, and go to state 33

    $default  reduce using rule 14 ($@1)

    $@1  go to state 34


State 29

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON .

    $default  reduce using rule 7 (func_declaration)


State 30

    8 func_definition: type_specifier ID LPAREN parameter_list RPAREN compound_statement .

    $default  reduce using rule 8 (func_definition)


State 31

    9 parameter_list: parameter_list COMMA type_specifier . ID
   10               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 35

    $default  reduce using rule 10 (parameter_list)


State 32

   22 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 36


State 33

   16 compound_statement: LCURL RCURL .

    $default  reduce using rule 16 (compound_statement)


State 34

   15 compound_statement: LCURL $@1 . statements RCURL

    IF           shift, and go to state 37
    FOR          shift, and go to state 38
    WHILE        shift, and go to state 39
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    LCURL        shift, and go to state 28
    SEMICOLON    shift, and go to state 43
    NOT          shift, and go to state 44
    PRINTLN      shift, and go to state 45
    ID           shift, and go to state 46
    CONST_INT    shift, and go to state 47
    CONST_FLOAT  shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    compound_statement    go to state 50
    var_declaration       go to state 51
    type_specifier        go to state 52
    statements            go to state 53
    statement             go to state 54
    expression_statement  go to state 55
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 35

    9 parameter_list: parameter_list COMMA type_specifier ID .

    $default  reduce using rule 9 (parameter_list)


State 36

   22 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 22 (declaration_list)


State 37

   31 statement: IF . LPAREN expression RPAREN statement
   32          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 64


State 38

   30 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 65


State 39

   33 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 66


State 40

   35 statement: RETURN . expression SEMICOLON

    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 44
    ID           shift, and go to state 46
    CONST_INT    shift, and go to state 47
    CONST_FLOAT  shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    variable           go to state 56
    expression         go to state 67
    logic_expression   go to state 58
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 41

   50 unary_expression: ADDOP . unary_expression

    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 44
    ID           shift, and go to state 46
    CONST_INT    shift, and go to state 47
    CONST_FLOAT  shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    variable          go to state 68
    unary_expression  go to state 69
    factor            go to state 63


State 42

   55 factor: LPAREN . expression RPAREN

    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 44
    ID           shift, and go to state 46
    CONST_INT    shift, and go to state 47
    CONST_FLOAT  shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    variable           go to state 56
    expression         go to state 70
    logic_expression   go to state 58
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 43

   36 expression_statement: SEMICOLON .

    $default  reduce using rule 36 (expression_statement)


State 44

   51 unary_expression: NOT . unary_expression

    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 44
    ID           shift, and go to state 46
    CONST_INT    shift, and go to state 47
    CONST_FLOAT  shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    variable          go to state 68
    unary_expression  go to state 71
    factor            go to state 63


State 45

   34 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 72


State 46

   38 variable: ID .
   39         | ID . LTHIRD expression RTHIRD
   54 factor: ID . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 73
    LTHIRD  shift, and go to state 74

    $default  reduce using rule 38 (variable)


State 47

   56 factor: CONST_INT .

    $default  reduce using rule 56 (factor)


State 48

   57 factor: CONST_FLOAT .

    $default  reduce using rule 57 (factor)


State 49

   58 factor: CONST_CHAR .

    $default  reduce using rule 58 (factor)


State 50

   29 statement: compound_statement .

    $default  reduce using rule 29 (statement)


State 51

   27 statement: var_declaration .

    $default  reduce using rule 27 (statement)


State 52

   17 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 75

    declaration_list  go to state 14


State 53

   15 compound_statement: LCURL $@1 statements . RCURL
   26 statements: statements . statement

    IF           shift, and go to state 37
    FOR          shift, and go to state 38
    WHILE        shift, and go to state 39
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    LCURL        shift, and go to state 28
    RCURL        shift, and go to state 76
    SEMICOLON    shift, and go to state 43
    NOT          shift, and go to state 44
    PRINTLN      shift, and go to state 45
    ID           shift, and go to state 46
    CONST_INT    shift, and go to state 47
    CONST_FLOAT  shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    compound_statement    go to state 50
    var_declaration       go to state 51
    type_specifier        go to state 52
    statement             go to state 77
    expression_statement  go to state 55
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 54

   25 statements: statement .

    $default  reduce using rule 25 (statements)


State 55

   28 statement: expression_statement .

    $default  reduce using rule 28 (statement)


State 56

   41 expression: variable . ASSIGNOP logic_expression
   53 factor: variable .
   59       | variable . INCOP
   60       | variable . DECOP

    INCOP     shift, and go to state 78
    DECOP     shift, and go to state 79
    ASSIGNOP  shift, and go to state 80

    $default  reduce using rule 53 (factor)


State 57

   37 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 81


State 58

   40 expression: logic_expression .

    $default  reduce using rule 40 (expression)


State 59

   42 logic_expression: rel_expression .
   43                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 82

    $default  reduce using rule 42 (logic_expression)


State 60

   44 rel_expression: simple_expression .
   45               | simple_expression . RELOP simple_expression
   47 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 83
    RELOP  shift, and go to state 84

    $default  reduce using rule 44 (rel_expression)


State 61

   46 simple_expression: term .
   49 term: term . MULOP unary_expression

    MULOP  shift, and go to state 85

    $default  reduce using rule 46 (simple_expression)


State 62

   48 term: unary_expression .

    $default  reduce using rule 48 (term)


State 63

   52 unary_expression: factor .

    $default  reduce using rule 52 (unary_expression)


State 64

   31 statement: IF LPAREN . expression RPAREN statement
   32          | IF LPAREN . expression RPAREN statement ELSE statement

    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 44
    ID           shift, and go to state 46
    CONST_INT    shift, and go to state 47
    CONST_FLOAT  shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    variable           go to state 56
    expression         go to state 86
    logic_expression   go to state 58
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 65

   30 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    SEMICOLON    shift, and go to state 43
    NOT          shift, and go to state 44
    ID           shift, and go to state 46
    CONST_INT    shift, and go to state 47
    CONST_FLOAT  shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    expression_statement  go to state 87
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 66

   33 statement: WHILE LPAREN . expression RPAREN statement

    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 44
    ID           shift, and go to state 46
    CONST_INT    shift, and go to state 47
    CONST_FLOAT  shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    variable           go to state 56
    expression         go to state 88
    logic_expression   go to state 58
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 67

   35 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 89


State 68

   53 factor: variable .
   59       | variable . INCOP
   60       | variable . DECOP

    INCOP  shift, and go to state 78
    DECOP  shift, and go to state 79

    $default  reduce using rule 53 (factor)


State 69

   50 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 50 (unary_expression)


State 70

   55 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 90


State 71

   51 unary_expression: NOT unary_expression .

    $default  reduce using rule 51 (unary_expression)


State 72

   34 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON

    ID  shift, and go to state 91


State 73

   54 factor: ID LPAREN . argument_list RPAREN

    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 44
    ID           shift, and go to state 46
    CONST_INT    shift, and go to state 47
    CONST_FLOAT  shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    $default  reduce using rule 62 (argument_list)

    variable           go to state 68
    logic_expression   go to state 92
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63
    argument_list      go to state 93
    arguments          go to state 94


State 74

   39 variable: ID LTHIRD . expression RTHIRD

    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 44
    ID           shift, and go to state 46
    CONST_INT    shift, and go to state 47
    CONST_FLOAT  shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    variable           go to state 56
    expression         go to state 95
    logic_expression   go to state 58
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 75

   23 declaration_list: ID .
   24                 | ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 16

    $default  reduce using rule 23 (declaration_list)


State 76

   15 compound_statement: LCURL $@1 statements RCURL .

    $default  reduce using rule 15 (compound_statement)


State 77

   26 statements: statements statement .

    $default  reduce using rule 26 (statements)


State 78

   59 factor: variable INCOP .

    $default  reduce using rule 59 (factor)


State 79

   60 factor: variable DECOP .

    $default  reduce using rule 60 (factor)


State 80

   41 expression: variable ASSIGNOP . logic_expression

    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 44
    ID           shift, and go to state 46
    CONST_INT    shift, and go to state 47
    CONST_FLOAT  shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    variable           go to state 68
    logic_expression   go to state 96
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 81

   37 expression_statement: expression SEMICOLON .

    $default  reduce using rule 37 (expression_statement)


State 82

   43 logic_expression: rel_expression LOGICOP . rel_expression

    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 44
    ID           shift, and go to state 46
    CONST_INT    shift, and go to state 47
    CONST_FLOAT  shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    variable           go to state 68
    rel_expression     go to state 97
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 83

   47 simple_expression: simple_expression ADDOP . term

    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 44
    ID           shift, and go to state 46
    CONST_INT    shift, and go to state 47
    CONST_FLOAT  shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    variable          go to state 68
    term              go to state 98
    unary_expression  go to state 62
    factor            go to state 63


State 84

   45 rel_expression: simple_expression RELOP . simple_expression

    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 44
    ID           shift, and go to state 46
    CONST_INT    shift, and go to state 47
    CONST_FLOAT  shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    variable           go to state 68
    simple_expression  go to state 99
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 85

   49 term: term MULOP . unary_expression

    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 44
    ID           shift, and go to state 46
    CONST_INT    shift, and go to state 47
    CONST_FLOAT  shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    variable          go to state 68
    unary_expression  go to state 100
    factor            go to state 63


State 86

   31 statement: IF LPAREN expression . RPAREN statement
   32          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 101


State 87

   30 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    SEMICOLON    shift, and go to state 43
    NOT          shift, and go to state 44
    ID           shift, and go to state 46
    CONST_INT    shift, and go to state 47
    CONST_FLOAT  shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    expression_statement  go to state 102
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 88

   33 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 103


State 89

   35 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 35 (statement)


State 90

   55 factor: LPAREN expression RPAREN .

    $default  reduce using rule 55 (factor)


State 91

   34 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 104


State 92

   64 arguments: logic_expression .

    $default  reduce using rule 64 (arguments)


State 93

   54 factor: ID LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 105


State 94

   61 argument_list: arguments .
   63 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 106

    $default  reduce using rule 61 (argument_list)


State 95

   39 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 107


State 96

   41 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 41 (expression)


State 97

   43 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 43 (logic_expression)


State 98

   47 simple_expression: simple_expression ADDOP term .
   49 term: term . MULOP unary_expression

    MULOP  shift, and go to state 85

    $default  reduce using rule 47 (simple_expression)


State 99

   45 rel_expression: simple_expression RELOP simple_expression .
   47 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 83

    $default  reduce using rule 45 (rel_expression)


State 100

   49 term: term MULOP unary_expression .

    $default  reduce using rule 49 (term)


State 101

   31 statement: IF LPAREN expression RPAREN . statement
   32          | IF LPAREN expression RPAREN . statement ELSE statement

    IF           shift, and go to state 37
    FOR          shift, and go to state 38
    WHILE        shift, and go to state 39
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    LCURL        shift, and go to state 28
    SEMICOLON    shift, and go to state 43
    NOT          shift, and go to state 44
    PRINTLN      shift, and go to state 45
    ID           shift, and go to state 46
    CONST_INT    shift, and go to state 47
    CONST_FLOAT  shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    compound_statement    go to state 50
    var_declaration       go to state 51
    type_specifier        go to state 52
    statement             go to state 108
    expression_statement  go to state 55
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 102

   30 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 44
    ID           shift, and go to state 46
    CONST_INT    shift, and go to state 47
    CONST_FLOAT  shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    variable           go to state 56
    expression         go to state 109
    logic_expression   go to state 58
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 103

   33 statement: WHILE LPAREN expression RPAREN . statement

    IF           shift, and go to state 37
    FOR          shift, and go to state 38
    WHILE        shift, and go to state 39
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    LCURL        shift, and go to state 28
    SEMICOLON    shift, and go to state 43
    NOT          shift, and go to state 44
    PRINTLN      shift, and go to state 45
    ID           shift, and go to state 46
    CONST_INT    shift, and go to state 47
    CONST_FLOAT  shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    compound_statement    go to state 50
    var_declaration       go to state 51
    type_specifier        go to state 52
    statement             go to state 110
    expression_statement  go to state 55
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 104

   34 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 111


State 105

   54 factor: ID LPAREN argument_list RPAREN .

    $default  reduce using rule 54 (factor)


State 106

   63 arguments: arguments COMMA . logic_expression

    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 44
    ID           shift, and go to state 46
    CONST_INT    shift, and go to state 47
    CONST_FLOAT  shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    variable           go to state 68
    logic_expression   go to state 112
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 107

   39 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 39 (variable)


State 108

   31 statement: IF LPAREN expression RPAREN statement .
   32          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 113

    $default  reduce using rule 31 (statement)


State 109

   30 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 114


State 110

   33 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 33 (statement)


State 111

   34 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 34 (statement)


State 112

   63 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 63 (arguments)


State 113

   32 statement: IF LPAREN expression RPAREN statement ELSE . statement

    IF           shift, and go to state 37
    FOR          shift, and go to state 38
    WHILE        shift, and go to state 39
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    LCURL        shift, and go to state 28
    SEMICOLON    shift, and go to state 43
    NOT          shift, and go to state 44
    PRINTLN      shift, and go to state 45
    ID           shift, and go to state 46
    CONST_INT    shift, and go to state 47
    CONST_FLOAT  shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    compound_statement    go to state 50
    var_declaration       go to state 51
    type_specifier        go to state 52
    statement             go to state 115
    expression_statement  go to state 55
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 114

   30 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    IF           shift, and go to state 37
    FOR          shift, and go to state 38
    WHILE        shift, and go to state 39
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    LCURL        shift, and go to state 28
    SEMICOLON    shift, and go to state 43
    NOT          shift, and go to state 44
    PRINTLN      shift, and go to state 45
    ID           shift, and go to state 46
    CONST_INT    shift, and go to state 47
    CONST_FLOAT  shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    compound_statement    go to state 50
    var_declaration       go to state 51
    type_specifier        go to state 52
    statement             go to state 116
    expression_statement  go to state 55
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 115

   32 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 32 (statement)


State 116

   30 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 30 (statement)
